#!/bin/bash
# Script para sincronizar usu√°rios entre Supabase e Open WebUI
# Criado em: maio/2025
# Licen√ßa: MIT

set -e

# Fun√ß√£o de log
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# Tratamento de erros
handle_error() {
    log "‚ùå Erro no script de sincroniza√ß√£o na linha $1"
    exit 1
}

trap 'handle_error $LINENO' ERR

# Carregar vari√°veis de ambiente
if [ ! -f .env ]; then
    log "‚ùå Arquivo .env n√£o encontrado. Criando a partir do exemplo..."
    cp .env.example .env
fi

source .env

# Verificar se o Open WebUI est√° em execu√ß√£o
log "üîç Verificando se o Open WebUI est√° em execu√ß√£o..."
if ! docker compose ps | grep -q "open-webui.*Up"; then
    log "‚ùå O servi√ßo Open WebUI n√£o est√° em execu√ß√£o"
    exit 1
fi

# Verificar se o banco de dados est√° em execu√ß√£o
log "üîç Verificando se o banco de dados est√° em execu√ß√£o..."
if ! docker compose ps | grep -q "db.*Up"; then
    log "‚ùå O servi√ßo de banco de dados n√£o est√° em execu√ß√£o"
    exit 1
fi

# Obter token de autentica√ß√£o do admin do Open WebUI
log "üîë Obtendo token de autentica√ß√£o do Open WebUI..."

ADMIN_USERNAME=${WEBUI_ADMIN_USERNAME:-admin}
ADMIN_PASSWORD=${WEBUI_ADMIN_PASSWORD:-orga-admin}

# Fun√ß√£o para obter token de admin do Open WebUI
get_webui_token() {
    local response=$(docker compose exec -T open-webui curl -s -X POST \
        http://localhost:8080/api/auth/login \
        -H "Content-Type: application/json" \
        -d "{\"username\":\"$ADMIN_USERNAME\",\"password\":\"$ADMIN_PASSWORD\"}")
    
    # Extrair o token da resposta (assumindo formato JSON com campo "access_token")
    echo "$response" | grep -o '"access_token":"[^"]*"' | sed 's/"access_token":"\([^"]*\)"/\1/'
}

ADMIN_TOKEN=$(get_webui_token)

if [ -z "$ADMIN_TOKEN" ]; then
    log "‚ùå N√£o foi poss√≠vel obter token de admin do Open WebUI"
    log "‚ö†Ô∏è Verifique se as credenciais admin est√£o corretas e se o Open WebUI est√° inicializado"
    exit 1
fi

log "‚úÖ Token de autentica√ß√£o obtido com sucesso"

# Obter lista de usu√°rios do Supabase
log "üë• Extraindo lista de usu√°rios do Supabase..."
USERS_QUERY="SELECT email, id, raw_user_meta_data->>'full_name' as name FROM auth.users;"
USERS=$(docker compose exec -T db psql -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres} -t -c "$USERS_QUERY")

# Contador de usu√°rios
TOTAL_USERS=0
SYNC_SUCCESS=0

# Para cada usu√°rio, verificar/criar no Open WebUI
echo "$USERS" | while read -r line; do
    if [ -z "$line" ]; then continue; fi
    
    # Extrair informa√ß√µes do usu√°rio
    email=$(echo "$line" | awk '{print $1}')
    user_id=$(echo "$line" | awk '{print $3}')
    name=$(echo "$line" | awk '{$1=$2=""; print $0}' | sed 's/^  //')
    
    # Se o nome estiver vazio, usar o e-mail como nome
    if [ -z "$name" ]; then
        name=$(echo "$email" | cut -d '@' -f 1)
    fi
    
    # Gerar senha tempor√°ria aleat√≥ria
    temp_pass=$(openssl rand -base64 12)
    
    log "üë§ Sincronizando usu√°rio: $email (ID: $user_id, Nome: $name)"
    
    # Verificar se o usu√°rio j√° existe no Open WebUI
    user_exists=$(docker compose exec -T open-webui curl -s -X GET \
        "http://localhost:8080/api/users/check/$email" \
        -H "Authorization: Bearer $ADMIN_TOKEN" \
        -H "Content-Type: application/json")
    
    if echo "$user_exists" | grep -q "true"; then
        log "‚ÑπÔ∏è Usu√°rio $email j√° existe no Open WebUI, atualizando..."
        
        # Atualizar usu√°rio existente
        update_result=$(docker compose exec -T open-webui curl -s -X PUT \
            "http://localhost:8080/api/users" \
            -H "Authorization: Bearer $ADMIN_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"username\":\"$email\",\"name\":\"$name\",\"user_id\":\"$user_id\"}")
        
        if [ $? -eq 0 ]; then
            log "‚úÖ Usu√°rio $email atualizado com sucesso"
            ((SYNC_SUCCESS++))
        else
            log "‚ö†Ô∏è Falha ao atualizar usu√°rio $email: $update_result"
        fi
    else
        log "‚ûï Criando novo usu√°rio $email no Open WebUI..."
        
        # Criar novo usu√°rio
        create_result=$(docker compose exec -T open-webui curl -s -X POST \
            "http://localhost:8080/api/users" \
            -H "Authorization: Bearer $ADMIN_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"username\":\"$email\",\"password\":\"$temp_pass\",\"name\":\"$name\",\"user_id\":\"$user_id\",\"role\":\"user\"}")
        
        if [ $? -eq 0 ]; then
            log "‚úÖ Usu√°rio $email criado com sucesso"
            ((SYNC_SUCCESS++))
        else
            log "‚ö†Ô∏è Falha ao criar usu√°rio $email: $create_result"
        fi
    fi
    
    ((TOTAL_USERS++))
done

log "üéØ Sincroniza√ß√£o conclu√≠da: $SYNC_SUCCESS de $TOTAL_USERS usu√°rios sincronizados"

exit 0