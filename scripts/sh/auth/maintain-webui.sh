#!/bin/bash
# Script para manuten√ß√£o autom√°tica do Open WebUI
# Este script gerencia sincroniza√ß√£o de usu√°rios, backups e manuten√ß√£o
# Criado em: maio/2025
# Licen√ßa: MIT

set -e

# Fun√ß√£o de log
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# Diret√≥rio do projeto
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../../.." && pwd)"

# Ir para a raiz do projeto
cd "$PROJECT_ROOT"

# Carregar vari√°veis de ambiente
if [ ! -f .env ]; then
    log "‚ùå Arquivo .env n√£o encontrado. Criando a partir do exemplo..."
    cp .env.example .env
fi
source .env

# Verificar containers em execu√ß√£o
log "üîç Verificando servi√ßos em execu√ß√£o..."
if ! docker compose ps | grep -q "open-webui.*Up"; then
    log "‚ö†Ô∏è O servi√ßo Open WebUI n√£o est√° em execu√ß√£o. Iniciando..."
    docker compose up -d open-webui
    sleep 10 # Aguardar inicializa√ß√£o
fi

# Realizar backup do banco de dados do WebUI
log "üíæ Realizando backup do banco de dados do Open WebUI..."
BACKUP_DIR="./volumes/backups/webui"
mkdir -p "$BACKUP_DIR"

BACKUP_FILE="$BACKUP_DIR/webui-db-$(date +'%Y%m%d-%H%M%S').bak"
docker compose cp open-webui:/app/.ollama-webui/db/database.sqlite "$BACKUP_FILE"
log "‚úÖ Backup conclu√≠do: $BACKUP_FILE"

# Limpeza de backups antigos (manter apenas os √∫ltimos 5)
log "üßπ Limpando backups antigos..."
ls -t "$BACKUP_DIR"/*.bak | tail -n +6 | xargs -r rm
log "‚úÖ Limpeza de backups conclu√≠da"

# Executar sincroniza√ß√£o de usu√°rios
log "üîÑ Sincronizando usu√°rios..."
./scripts/sh/auth/sync-webui-users.sh

# Verificar problemas de permiss√£o
log "üîí Verificando permiss√µes dos arquivos do Open WebUI..."
docker compose exec open-webui sh -c "chown -R root:root /app/.ollama-webui/db 2>/dev/null || true"

# Verificar atualiza√ß√µes dispon√≠veis para o Open WebUI
log "üîÑ Verificando atualiza√ß√µes para o Open WebUI..."
CURRENT_IMAGE=$(docker inspect --format='{{.Config.Image}}' "$(docker compose ps -q open-webui)")
log "üì¶ Imagem atual do Open WebUI: $CURRENT_IMAGE"

# Puxar a imagem mais recente sem interromper o servi√ßo
docker pull ghcr.io/ollama-webui/ollama-webui:main

# Verificar se √© necess√°rio atualizar
NEW_IMAGE_ID=$(docker images --no-trunc --format '{{.ID}}' ghcr.io/ollama-webui/ollama-webui:main)
CURRENT_IMAGE_ID=$(docker inspect --format='{{.Image}}' "$(docker compose ps -q open-webui)")

if [ "$NEW_IMAGE_ID" != "$CURRENT_IMAGE_ID" ]; then
    log "üÜï Nova vers√£o do Open WebUI dispon√≠vel. Atualizando..."
    docker compose up -d --no-deps --build open-webui
    log "‚úÖ Open WebUI atualizado com sucesso"
else
    log "‚úÖ Open WebUI j√° est√° na vers√£o mais recente"
fi

# Gerar relat√≥rio de sa√∫de
log "üìä Gerando relat√≥rio de sa√∫de..."
docker compose exec -T open-webui curl -s http://localhost:8080/api/health > ./volumes/logs/webui-health-$(date +'%Y%m%d').json 2>/dev/null || log "‚ö†Ô∏è N√£o foi poss√≠vel obter relat√≥rio de sa√∫de"

log "‚úÖ Manuten√ß√£o do Open WebUI conclu√≠da com sucesso!"
exit 0